#!/bin/bash

# =============================================================================
# File: nasm-test.sh
# Description: This is a script used to test if given NASM source file can be
# successfully assembled, linked & run. This can be used to test the macros
# written by team as well as the code generated by OPaL.
# =============================================================================

# Function to print usage and exit
function usage() {
  printf "Usage: $(basename $0) FILE \n"; 2>&1
  exit 1
}

# Function to run assemble & link source file. The binary is then run and exit 
# code is printed.
function nl() {
  argname=$(basename $1);
  filename=${argname%.*};
  printf "\nAssemble with NASM\n";
  printf "*****************\n";
  printf "nasm -g -f elf64 -o $filename.o -l $filename.lst $argname\n";
  nasm -g -f elf64 -o $filename.o -l $filename.lst $argname;
  retVal=$?;
  printf "\texit code: $retVal\n";

  # If assembly successful, continue with linking
  if [ $retVal -eq 0 ]
  then
    printf "\nLink with ld\n"
    printf "*****************\n";
    printf "ld -m elf_x86_64 -o $filename.bin -lc -I/lib64/ld-linux-x86-64.so.2 $filename.o\n";
    ld -m elf_x86_64 -o $filename.bin -lc -I/lib64/ld-linux-x86-64.so.2 $filename.o
    retVal=$?;
    printf "\texit code: $retVal\n";
    
    # If linking successful, continue with execution
    if [ $retVal -eq 0 ]
    then
      printf "\nRun binary $filename.bin\n";
      printf "*****************\n";
      $filename.bin "${@:2}"
      retVal=$?;
      printf "\texit code: $retVal\n";
    fi
  fi
}

# If no arguments, print usage and exit
if [[ ${#} -eq 0 || "$1" == "-h" ]]
then
  #Print usage & exit
  usage
else
  # Call nl with file argument
  nl $1
fi
